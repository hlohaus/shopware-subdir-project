#!/usr/bin/env php
<?php declare(strict_types=1);

use PackageVersions\Versions;
use Shopware\Core\Framework\Plugin\KernelPluginLoader\DbalKernelPluginLoader;
use Shopware\Development\Kernel;
use Symfony\Bundle\FrameworkBundle\Console\Application;
use Symfony\Component\Console\Input\ArgvInput;
use Symfony\Component\Debug\Debug;
use Symfony\Component\Dotenv\Dotenv;

set_time_limit(0);

$classLoader = require __DIR__ . '/../../vendor/autoload.php';

if (!class_exists(Application::class)) {
    throw new RuntimeException('You need to add "symfony/framework-bundle" as a Composer dependency.');
}

if (!class_exists(Dotenv::class)) {
    throw new RuntimeException('APP_ENV environment variable is not defined. You need to define environment variables for configuration or add "symfony/dotenv" as a Composer dependency to load variables from a .env file.');
}

(new Dotenv(true))->load(__DIR__ . '/../private/.env');

$input = new ArgvInput();
$env = $input->getParameterOption(['--env', '-e'], $_SERVER['APP_ENV'] ?? 'dev', true);
$debug = (bool) ($_SERVER['APP_DEBUG'] ?? ($env !== 'prod')) && !$input->hasParameterOption('--no-debug', true);

if ($debug) {
    umask(0000);

    if (class_exists(Debug::class)) {
        Debug::enable();
    }
}

$shopwareVersion = Versions::getVersion('shopware/platform');

$connection = Kernel::getConnection();

try {
    $cacheId = $connection->fetchColumn(
        'SELECT `value` FROM app_config WHERE `key` = :key',
        ['key' => 'cache-id']
    );
} catch (\Exception $e) {
    $cacheId = \Shopware\Core\Framework\Uuid\Uuid::randomHex();
}

$pluginLoader = new DbalKernelPluginLoader($classLoader, null, $connection);
$kernel = new Kernel($env, $debug, $pluginLoader, $cacheId, $shopwareVersion, $connection);
$application = new Application($kernel);
$application->run($input);
